# [993. 二叉树的堂兄弟节点](https://leetcode-cn.com/problems/cousins-in-binary-tree/)-wk

- 问题描述

  > 在二叉树中，根节点位于深度 0 处，每个深度为 k 的节点的子节点位于深度 k+1 处。
  >
  > 如果二叉树的两个节点深度相同，但 父节点不同 ，则它们是一对堂兄弟节点。
  >
  > 我们给出了具有唯一值的二叉树的根节点 root ，以及树中两个不同节点的值 x 和 y 。
  >
  > 只有与值 x 和 y 对应的节点是堂兄弟节点时，才返回 true 。否则，返回 false

- 问题分析

  - 此题主要就是记录当前节点的父亲节点和当前节点的高度
  - 我们可以利用bfs的层序遍历特性来做，也可以用额外的两个变量来记录高度和父亲节点
  - 最后比较一下两个节点的高度和父亲节点即可。

- 问题代码

```java
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode fa1, fa2;
    int d1, d2;
    void dfs(TreeNode node, int x, int y, int d, TreeNode par) {
        if (node == null) {
            return;
        }
        if (node.val == x) {
            d1 = d;
            fa1 = par;
        }
        if (node.val == y) {
            d2 = d;
            fa2 = par;
        }
        dfs(node.left, x, y, d+1, node);
        dfs(node.right, x, y, d+1, node);
    }
    public boolean isCousins(TreeNode root, int x, int y) {
        dfs(root, x,y,0,null);
        return (fa1 != fa2) && (d1 == d2);
    }
}
```

